+ source /root/GitRepo/mugen-riscv/libs/locallibs/common_lib.sh
++ python3 --version
++ '[' 0 -eq 0 ']'
++ source /root/GitRepo/mugen-riscv/libs/locallibs/common_lib_python.sh
+ main
++ type -t post_test
+ '[' -n function ']'
+ trap post_test EXIT INT HUP TERM
+ grep expect
+ rpm -qa
++ type -t config_params
+ '[' -n '' ']'
++ type -t pre_test
+ '[' -n function ']'
+ pre_test
+ LOG_INFO 'Start environment preparation.'
+ message='Start environment preparation.'
+ python3 /root/GitRepo/mugen-riscv/libs/locallibs/mugen_log.py --level info --message 'Start environment preparation.'
Fri Dec 16 00:27:19 2022 - INFO  - Start environment preparation.
+ DNF_INSTALL rpmdevtools
+ pkgs=rpmdevtools
+ node=1
+ '[' -z '' ']'
+ tmpfile=
++ python3 /root/GitRepo/mugen-riscv/libs/locallibs/rpm_manage.py install --pkgs rpmdevtools --node 1 --tempfile ''
+ tmpfile2=/tmp/tmppmsjmxni
+ '[' -z '' ']'
+ tmpfile=/tmp/tmppmsjmxni
++ dnf list
++ head -n 3
++ awk '{print $1}'
++ awk 'BEGIN {FS="."} {print $1}'
++ tail -n 1
+ pkg_name=Box2D
++ dnf list
++ head -n 3
++ awk '{print $1}'
++ awk 'BEGIN {FS="."} {print $2}'
++ tail -n 1
+ pkg_arch=riscv64
+ yumdownloader Box2D
Last metadata expiration check: 1 day, 6:55:15 ago on Wed Dec 14 17:33:42 2022.
Box2D-2.4.1-1.oe2203.riscv64.rpm                 88 kB/s |  99 kB     00:01    
+ mkdir -p /ALT/Sisyphus/files/i586/RPMS
+ mkdir -p /ALT/Sisyphus/files/noarch/RPMS
+ mkdir -p /ALT/Sisyphus/files/SRPMS
+ cp Box2D-2.4.1-1.oe2203.riscv64.rpm /ALT/Sisyphus/files/SRPMS/
+ cp Box2D-2.4.1-1.oe2203.riscv64.rpm /ALT/Sisyphus/files/i586/RPMS/
+ cp Box2D-2.4.1-1.oe2203.riscv64.rpm /ALT/Sisyphus/files/noarch/RPMS
++ dnf list
++ head -n 4
++ awk '{print $1}'
++ tail -n 1
++ awk 'BEGIN {FS="."} {print $1}'
+ pkg_name1=Imath
+ mkdir ./tmp_dir
+ yumdownloader Imath
Last metadata expiration check: 1 day, 6:55:41 ago on Wed Dec 14 17:33:42 2022.
Imath-3.1.4-1.oe2203.riscv64.rpm                 96 kB/s |  68 kB     00:00    
+ LOG_INFO 'End of environmental preparation.'
+ message='End of environmental preparation.'
+ python3 /root/GitRepo/mugen-riscv/libs/locallibs/mugen_log.py --level info --message 'End of environmental preparation.'
Fri Dec 16 00:29:26 2022 - INFO  - End of environmental preparation.
++ type -t run_test
+ '[' -n function ']'
+ run_test
+ LOG_INFO 'Start to run test.'
+ message='Start to run test.'
+ python3 /root/GitRepo/mugen-riscv/libs/locallibs/mugen_log.py --level info --message 'Start to run test.'
Fri Dec 16 00:29:27 2022 - INFO  - Start to run test.
+ rpmargs -h
+ grep 'Usage:
  rpmargs'
Usage:
    rpmargs [-h] -c command [-a] [-p] [FILE...] [DIR...]
+ CHECK_RESULT 0 0 0 'Failed option: -h'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Failed option: -h'
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ rpmargs -c file -a
+ grep Box2D
Box2D-2.4.1-1.oe2203.riscv64.rpm	/ALT/Sisyphus/files/i586/RPMS/Box2D-2.4.1-1.oe2203.riscv64.rpm: RPM v3.0 bin
Box2D-2.4.1-1.oe2203.riscv64.rpm	/ALT/Sisyphus/files/noarch/RPMS/Box2D-2.4.1-1.oe2203.riscv64.rpm: RPM v3.0 bin
Box2D-2.4.1-1.oe2203.riscv64.rpm	/ALT/Sisyphus/files/SRPMS/Box2D-2.4.1-1.oe2203.riscv64.rpm: RPM v3.0 bin
+ CHECK_RESULT 0 0 0 'Failed option: -a'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Failed option: -a'
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ grep Box2D
+ rpmargs -c file -p /ALT/Sisyphus/files/noarch/RPMS/Box2D-2.4.1-1.oe2203.riscv64.rpm
/ALT/Sisyphus/files/noarch/RPMS/Box2D-2.4.1-1.oe2203.riscv64.rpm: RPM v3.0 bin
+ CHECK_RESULT 0 0 0 'Failed option: -p'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Failed option: -p'
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ grep 'Box2D.*.rpm: RSA/SHA1'
+ rpmdev-checksig Box2D-2.4.1-1.oe2203.riscv64.rpm
+ CHECK_RESULT 1 0 0 'Failed command:rpmdev-checksig'
+ actual_result=1
+ expect_result=0
+ mode=0
+ error_log='Failed command:rpmdev-checksig'
+ '[' -z 1 ']'
+ '[' 0 -eq 0 ']'
+ test 1x '!=' 0x
+ test -n 'Failed command:rpmdev-checksig'
+ LOG_ERROR 'Failed command:rpmdev-checksig'
+ message='Failed command:rpmdev-checksig'
+ python3 /root/GitRepo/mugen-riscv/libs/locallibs/mugen_log.py --level error --message 'Failed command:rpmdev-checksig'
Fri Dec 16 00:29:35 2022 - ERROR - Failed command:rpmdev-checksig
+ (( exec_result++ ))
+ LOG_ERROR 'oe_test_rpmdevtools_rpmargs.sh line 52'
+ message='oe_test_rpmdevtools_rpmargs.sh line 52'
+ python3 /root/GitRepo/mugen-riscv/libs/locallibs/mugen_log.py --level error --message 'oe_test_rpmdevtools_rpmargs.sh line 52'
Fri Dec 16 00:29:36 2022 - ERROR - oe_test_rpmdevtools_rpmargs.sh line 52
+ return 0
+ head -n 1
+ rpmdev-cksum Box2D-2.4.1-1.oe2203.riscv64.rpm
+ grep 'Box2D.*rpm'
+ awk '{print $3}'
Box2D-2.4.1-1.oe2203.riscv64.rpm
+ CHECK_RESULT 0 0 0 'Failed command: rpmdev-cksum'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Failed command: rpmdev-cksum'
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ rpmdev-diff -v
+ grep 'rpmdev-diff version'
rpmdev-diff version 1.4
+ CHECK_RESULT 0 0 0 'Failed option: -v'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Failed option: -v'
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ rpmdev-diff -h
+ grep -A 5 rpmdev-diff
+ grep Options:
Options:
+ CHECK_RESULT 0 0 0 'Failed option: -h'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Failed option: -h'
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ rpmdev-diff -c Box2D-2.4.1-1.oe2203.riscv64.rpm Imath-3.1.4-1.oe2203.riscv64.rpm
Binary files Box2D-2.4.1-1.oe2203.riscv64/usr/lib64/libImath-3_1.so.29 and Imath-3.1.4-1.oe2203.riscv64/usr/lib64/libImath-3_1.so.29 differ
Binary files Box2D-2.4.1-1.oe2203.riscv64/usr/lib64/libImath-3_1.so.29.3.0 and Imath-3.1.4-1.oe2203.riscv64/usr/lib64/libImath-3_1.so.29.3.0 differ
Binary files Box2D-2.4.1-1.oe2203.riscv64/usr/lib64/libbox2d.so.2 and Imath-3.1.4-1.oe2203.riscv64/usr/lib64/libbox2d.so.2 differ
Binary files Box2D-2.4.1-1.oe2203.riscv64/usr/lib64/libbox2d.so.2.4.1 and Imath-3.1.4-1.oe2203.riscv64/usr/lib64/libbox2d.so.2.4.1 differ
diff -r -Nup Box2D-2.4.1-1.oe2203.riscv64/usr/share/doc/Imath/CHANGES.md Imath-3.1.4-1.oe2203.riscv64/usr/share/doc/Imath/CHANGES.md
--- Box2D-2.4.1-1.oe2203.riscv64/usr/share/doc/Imath/CHANGES.md	1970-01-01 08:00:00.000000000 +0800
+++ Imath-3.1.4-1.oe2203.riscv64/usr/share/doc/Imath/CHANGES.md	2022-01-20 09:22:48.000000000 +0800
@@ -0,0 +1,308 @@
+# Imath Release Notes
+
+* [Version 3.1.4](#version-314-january-21-2022) January 21, 2022
+* [Version 3.1.3](#version-313-september-2-2021) September 2, 2021
+* [Version 3.1.2](#version-312-july-31-2021) July 31, 2021
+* [Version 3.1.1](#version-311-july-20-2021) July 20, 2021
+* [Version 3.1.0](#version-310-july-13-2021) July 13, 2021
+* [Version 3.0.5](#version-305-june-29-2021) June 29, 2021
+* [Version 3.0.4](#version-304-june-1-2021) June 1, 2021
+* [Version 3.0.2](#version-302-may-16-2021) May 16, 2021
+* [Version 3.0.1](#version-301-april-1-2021) April 1, 2021
+* [Version 3.0.1-beta](#version-301-beta-march-28-2021) March 28, 2021
+* [Version 3.0.0-beta](#version-300-beta-march-15-2021) March 15, 2021
+* [Inherited History from OpenEXR](#inherited-history-from-openexr)
+
+## Version 3.1.4 (January 21, 2022)
+
+Patch release with miscellaneous bug/doc/build fixes.
+
+* \[[#229](https://github.com/AcademySoftwareFoundation/Imath/pull/229)\] 
+Remove some simple typos in the code
+* \[[#228](https://github.com/AcademySoftwareFoundation/Imath/pull/228)\] 
+Added missing check _M_IX86 or _M_X64 when using __lzcnt.
+* \[[#224](https://github.com/AcademySoftwareFoundation/Imath/pull/224)\] 
+SolveNormalizedCubic fix to return proper real root
+* \[[#223](https://github.com/AcademySoftwareFoundation/Imath/pull/223)\] 
+Add docs target only if not a subproject
+* \[[#222](https://github.com/AcademySoftwareFoundation/Imath/pull/222)\] 
+Fix docs race condition and make installation optional
+* \[[#220](https://github.com/AcademySoftwareFoundation/Imath/pull/220)\] 
+Remove dead PyImath code and references to ilmbase
+* \[[#219](https://github.com/AcademySoftwareFoundation/Imath/pull/219)\] 
+Use equalWithAbsError instead of equal operator for float
+* \[[#218](https://github.com/AcademySoftwareFoundation/Imath/pull/218)\] 
+Fix sphinx warnings and man page filenames
+* \[[#215](https://github.com/AcademySoftwareFoundation/Imath/pull/215)\] 
+Adding missing stdexcept header
+* \[[#214](https://github.com/AcademySoftwareFoundation/Imath/pull/214)\] 
+Use .x instead of operator[] for better SIMD auto-vectorization
+* \[[#213](https://github.com/AcademySoftwareFoundation/Imath/pull/213)\] 
+Remove extra project layer for the pyimath code
+* \[[#209](https://github.com/AcademySoftwareFoundation/Imath/pull/209)\] 
+Successor/predecessor functions use isnan() and isinf()
+* \[[#207](https://github.com/AcademySoftwareFoundation/Imath/pull/207)\] 
+Fix python imath export
+* \[[#202](https://github.com/AcademySoftwareFoundation/Imath/pull/202)\] 
+Cuda safety fixes
+* \[[#185](https://github.com/AcademySoftwareFoundation/Imath/pull/185)\] 
+Sort Imath source files
+* \[[#182](https://github.com/AcademySoftwareFoundation/Imath/pull/182)\] 
+Fix formatting in release notes
+
+## Version 3.1.3 (September 2, 2021)
+
+Patch release with miscellaneous fixes
+
+* \[[#204](https://github.com/AcademySoftwareFoundation/Imath/pull/204)\] 
+Fix undefined access of a vector when empty
+* \[[#203](https://github.com/AcademySoftwareFoundation/Imath/pull/203)\] 
+Require sphinx 4.0.3
+* \[[#201](https://github.com/AcademySoftwareFoundation/Imath/pull/201)\] 
+Build sphinx/doxygen docs with CMake
+* \[[#200](https://github.com/AcademySoftwareFoundation/Imath/pull/200)\] 
+Use PYIMATH_OVERRIDE_PYTHON_INSTALL_DIR to specify destination python modules
+* \[[#199](https://github.com/AcademySoftwareFoundation/Imath/pull/199)\] 
+Guard `__has_attribute` for compilers that don't support it
+* \[[#198](https://github.com/AcademySoftwareFoundation/Imath/pull/198)\] 
+Cuda safety fixes
+* \[[#194](https://github.com/AcademySoftwareFoundation/Imath/pull/194)\] 
+Replace stray Imath:: with IMATH_INTERNAL_NAMESPACE::
+
+## Version 3.1.2 (July 31, 2021)
+
+Patch release that fixes a Windows header issue.
+
+* \[[#190](https://github.com/AcademySoftwareFoundation/Imath/pull/190)\] 
+  Improve handling of ``#include <*intrin.h>``
+
+## Version 3.1.1 (July 20, 2021)
+
+Patch release that fixes a build failure on ARM64 macOS
+
+* \[[#184](https://github.com/AcademySoftwareFoundation/Imath/pull/184)\] Include ``<x86intrin.h>`` only if ``__x86_64__``
+
+## Version 3.1.0 (July 13, 2021)
+
+Minor release with new features:
+
+* Optimized half-to-float and float-to-half conversion, using F16C SSE
+  instruction set if available. Non-SSE conversion eliminates the
+  float-to-half exponent lookup table, and half-to-float conversion
+  provides a compile-time-optional bit shifting that is slower but
+  eliminates the need for the lookup table, for applications where
+  memory is limited.
+
+  Half-to-float and float-to-half conversion is also available as
+  C-language functions ``imath_half_to_float()`` and
+  ``imath_float_to_half()``.
+  
+  All new conversions produced identical results, and new options are
+  off by default to ensure backwards compatibility. See
+  https://imath.readthedocs.io for more info.
+  
+* ``noexcept`` specifier can be eliminated at compile-time via the
+  ``IMATH_USE_NOEXCEPT`` CMake option.
+
+* Python bindings:
+  * FixedArray objects support a "read only" state.
+  * FixedArray objects support python buffer protocol.
+
+* Optimized 4x4 matrix multiplication.
+
+### Merged Pull Requests
+
+* \[[#181](https://github.com/AcademySoftwareFoundation/Imath/pull/181)\] Clean up half lookup-table options and related docs
+* \[[#179](https://github.com/AcademySoftwareFoundation/Imath/pull/179)\] Remove dead code from half
+* \[[#178](https://github.com/AcademySoftwareFoundation/Imath/pull/178)\] Update Imath docs for 3.1
+* \[[#177](https://github.com/AcademySoftwareFoundation/Imath/pull/177)\] v3.1.0 release notes
+* \[[#175](https://github.com/AcademySoftwareFoundation/Imath/pull/175)\] Clean up library VERSION and SOVERSION 
+* \[[#173](https://github.com/AcademySoftwareFoundation/Imath/pull/173)\] Update README.md and INSTALL.md for 3.1 
+* \[[#172](https://github.com/AcademySoftwareFoundation/Imath/pull/172)\] Use CMAKE_INSTALL_FULL_LIBDIR/INCLUDEDIR for pkgconfig 
+* \[[#169](https://github.com/AcademySoftwareFoundation/Imath/pull/169)\] Add testInterop to test list in define_imath_test() 
+* \[[#168](https://github.com/AcademySoftwareFoundation/Imath/pull/168)\] Push/pop Windows warning pragma 
+* \[[#167](https://github.com/AcademySoftwareFoundation/Imath/pull/167)\] Clean up cmake lib symlink message 
+* \[[#166](https://github.com/AcademySoftwareFoundation/Imath/pull/166)\] Fix non-versioned library symlinks in debug build. 
+* \[[#165](https://github.com/AcademySoftwareFoundation/Imath/pull/165)\] Use CMAKE_<CONFIG>_POSTFIX for .pc file lib suffix. 
+* \[[#162](https://github.com/AcademySoftwareFoundation/Imath/pull/162)\] silence a few warnings noticed with -Weverything 
+* \[[#160](https://github.com/AcademySoftwareFoundation/Imath/pull/160)\] Clean up analysis_workflow.yml 
+* \[[#159](https://github.com/AcademySoftwareFoundation/Imath/pull/159)\] Add new macros to Doxyfile PREDEFINED 
+* \[[#158](https://github.com/AcademySoftwareFoundation/Imath/pull/158)\] Improve 4x4 matrix multiplication 
+* \[[#157](https://github.com/AcademySoftwareFoundation/Imath/pull/157)\] IMATH_NOEXCEPT macro to make noexcept a compile-time option 
+* \[[#156](https://github.com/AcademySoftwareFoundation/Imath/pull/156)\] PyImath read-only FixedArray state & python buffer protocol support 
+* \[[#155](https://github.com/AcademySoftwareFoundation/Imath/pull/155)\] Release notes for v3.0.4 
+* \[[#153](https://github.com/AcademySoftwareFoundation/Imath/pull/153)\] Configure ImathTest as optional standalone program 
+* \[[#150](https://github.com/AcademySoftwareFoundation/Imath/pull/150)\] Add __version__ attr to imath and imathnumpy python modules 
+* \[[#141](https://github.com/AcademySoftwareFoundation/Imath/pull/141)\] Enable C and lighter weight half <-> float conversion 
+
+## Version 3.0.5 (June 29, 2021)
+
+Patch release that fixes problems with library symlinks and
+pkg-config. Otherwise, no code changes.
+
+* \[[#172](https://github.com/AcademySoftwareFoundation/Imath/pull/172)\] Use CMAKE_INSTALL_FULL_LIBDIR/INCLUDEDIR for pkgconfig
+* \[[#166](https://github.com/AcademySoftwareFoundation/Imath/pull/166)\] Fix non-versioned library symlinks in debug build.
+* \[[#165](https://github.com/AcademySoftwareFoundation/Imath/pull/165)\] Use CMAKE_<CONFIG>_POSTFIX for .pc file lib suffix.
+
+## Version 3.0.4 (June 1, 2021)
+
+Patch release that corrects a problem with the release version number
+of v3.0.2:
+
+* \[[#147](https://github.com/AcademySoftwareFoundation/Imath/pull/147)\] Add #define for IMATH_VERSION_RELEASE_TYPE
+* \[[#145](https://github.com/AcademySoftwareFoundation/Imath/pull/145)\] Set IMATH_VERSION from Imath_VERSION instead of CMAKE_PROJECT_VERSION
+
+## Version 3.0.2 (May 16, 2021)
+
+Patch release with miscellaneous bug/build fixes:
+
+* \[[#142](https://github.com/AcademySoftwareFoundation/Imath/pull/142)\] Fix order of ${IMATH_SOVERSION}.${IMATH_SOREVISION}.${IMATH_SOAGE}
+* \[[#140](https://github.com/AcademySoftwareFoundation/Imath/pull/140)\] Fix regression in succf()/predf()          
+* \[[#139](https://github.com/AcademySoftwareFoundation/Imath/pull/139)\] Clean up setting of Imath version          
+* \[[#137](https://github.com/AcademySoftwareFoundation/Imath/pull/137)\] Don't impose C++14 on downstream projects  
+* \[[#135](https://github.com/AcademySoftwareFoundation/Imath/pull/135)\] Add section on python bindings             
+* \[[#133](https://github.com/AcademySoftwareFoundation/Imath/pull/133)\] Lib version                                
+
+## Version 3.0.1 (April 1, 2021)
+
+First release of Imath independent of OpenEXR.
+
+See the [porting guide](docs/PortingGuide2-3.md) for details about
+differences from previous releases.
+
+Summary:
+
+* Imath includes the half type, formerly in a separate Half library.
+* Headers are installed in ``Imath/`` subdirectory.
+* All appropriate methods are marked constexpr, noexcept
+* Appropriate declaration include CUDA ``__host__`` and ``__device__``
+  directives.
+* Throwing methods throw std exceptions instead of ``Iex``.
+* New Vec and Matrix interoperability constructors for conversion from
+  other similar type objects.
+* Symbol linkage visibility is limited to specific public symbols.
+* python bindings are off by default, available by setting ``PYTHON=ON``.
+* Deprecated features:
+  - ``std::numeric_limits`` replaces ``Imath::limits``.
+  - ``Int64`` and ``SInt64`` are deprecated in favor of ``uint64_t``
+    and ``int64_t``.
+
+## Version 3.0.1-beta (March 28, 2021)
+
+Beta patch release:
+
+* \[[#131](https://github.com/AcademySoftwareFoundation/Imath/pull/131)\] #if IMATH_FOREIGN_VECTOR_INTEROP around type detectors
+
+* \[[#130](https://github.com/AcademySoftwareFoundation/Imath/pull/130)\] Forward declarations only if header is not included
+
+## Version 3.0.0-beta (March 15, 2021)
+
+First release of Imath independent of OpenEXR.
+
+See the [porting guide](docs/PortingGuide2-3.md) for details about
+differences from previous releases.
+
+Summary and Key Changes:
+
+* Imath includes the half type, formerly in a separate Half library.
+* Headers are installed in ``Imath/`` subdirectory.
+* Header files have been pruned of extraneous ``#include``'s, which may
+  require updates to application source code.
+* All appropriate methods are marked constexpr, noexcept
+* Appropriate declaration include CUDA ``__host__`` and ``__device__``
+  directives.
+* Throwing methods throw std exceptions instead of ``Iex``.
+* New Vec and Matrix interoperability constructors for conversion from
+  other similar type objects.
+* Symbol linkage visibility is limited to specific public symbols.
+* Python bindings are off by default, available by setting ``PYTHON=ON``.
+* Deprecated features:
+  - ``std::numeric_limits`` replaces ``Imath::limits``.
+  - ``Int64`` and ``SInt64`` are deprecated in favor of ``uint64_t``
+    and ``int64_t``.
+
+### Merged Pull Requests
+
+* \[[#119](https://github.com/AcademySoftwareFoundation/Imath/pull/119)\] Enable policy 77 if possible.
+* \[[#117](https://github.com/AcademySoftwareFoundation/Imath/pull/117)\] Add/fix rst source for readthedocs
+* \[[#116](https://github.com/AcademySoftwareFoundation/Imath/pull/116)\] Add/fix doxygen comments
+* \[[#115](https://github.com/AcademySoftwareFoundation/Imath/pull/115)\] Add =delete for the int64_t Vec specializations
+* \[[#114](https://github.com/AcademySoftwareFoundation/Imath/pull/114)\] Disable analysis on PR/push
+* \[[#113](https://github.com/AcademySoftwareFoundation/Imath/pull/113)\] Clean up cmake/config
+* \[[#111](https://github.com/AcademySoftwareFoundation/Imath/pull/111)\] Rename IMATH_IMATH_NAMESPACE option to IMATH_NAMESPACE
+* \[[#110](https://github.com/AcademySoftwareFoundation/Imath/pull/110)\] Remove PyImathConfigInternal
+* \[[#109](https://github.com/AcademySoftwareFoundation/Imath/pull/109)\] build one python binding only
+* \[[#107](https://github.com/AcademySoftwareFoundation/Imath/pull/107)\] Add int64_t specializations of Vec and Box.
+* \[[#106](https://github.com/AcademySoftwareFoundation/Imath/pull/106)\] Replace Int64/SInt64 with uint64_t/int64_t
+* \[[#103](https://github.com/AcademySoftwareFoundation/Imath/pull/103)\] Drop support for exception-handling in PyImath
+* \[[#102](https://github.com/AcademySoftwareFoundation/Imath/pull/102)\] cmake improvements and fixes
+* \[[#100](https://github.com/AcademySoftwareFoundation/Imath/pull/100)\] Replace Iex::OverflowExc with std::invalid_argument
+* \[[#98](https://github.com/AcademySoftwareFoundation/Imath/pull/98)\] constexpr Vec2, Vec3, Vec4 constructors
+* \[[#97](https://github.com/AcademySoftwareFoundation/Imath/pull/97)\] restore original behavior of Matrix33<T>::setScale()
+* \[[#95](https://github.com/AcademySoftwareFoundation/Imath/pull/95)\] Build fixups for Visual Studio 2015
+* \[[#94](https://github.com/AcademySoftwareFoundation/Imath/pull/94)\] Add background and file/class-specific details to porting guide
+* \[[#93](https://github.com/AcademySoftwareFoundation/Imath/pull/93)\] Fix typo in comment in testHalfLimits
+* \[[#92](https://github.com/AcademySoftwareFoundation/Imath/pull/92)\] Replace ILMBASE_HAVE_LARGE_STACK with IMATH_HAVE_LARGE_STACK
+* \[[#91](https://github.com/AcademySoftwareFoundation/Imath/pull/91)\] Interoperability constructors
+* \[[#90](https://github.com/AcademySoftwareFoundation/Imath/pull/90)\] Fix compiler errors from recent changes
+* \[[#89](https://github.com/AcademySoftwareFoundation/Imath/pull/89)\] First stab at Imath 2->3 porting guide
+* \[[#88](https://github.com/AcademySoftwareFoundation/Imath/pull/88)\] PyImath installs headers into Imath subdirectory
+* \[[#87](https://github.com/AcademySoftwareFoundation/Imath/pull/87)\] constexpr as much of half as possible
+* \[[#83](https://github.com/AcademySoftwareFoundation/Imath/pull/83)\] Replace NOTICE with STATUS for CMake messages
+* \[[#82](https://github.com/AcademySoftwareFoundation/Imath/pull/82)\] Clean up Imath::Limits and numeric_limits issues
+* \[[#81](https://github.com/AcademySoftwareFoundation/Imath/pull/81)\] Reformat all Imath header comments to doxygen style
+* \[[#77](https://github.com/AcademySoftwareFoundation/Imath/pull/77)\] Change copyright notices to standard SPDX format
+* \[[#76](https://github.com/AcademySoftwareFoundation/Imath/pull/76)\] Incorrect constexpr in Imath::limits<half>, and missing test.
+* \[[#75](https://github.com/AcademySoftwareFoundation/Imath/pull/75)\] CI: add VFX2021 jobs, enable coverage analysis
+* \[[#74](https://github.com/AcademySoftwareFoundation/Imath/pull/74)\] noexcept all the things
+* \[[#73](https://github.com/AcademySoftwareFoundation/Imath/pull/73)\] Simplify definition of IMATH_RESTRICT for modern supported compilers
+* \[[#72](https://github.com/AcademySoftwareFoundation/Imath/pull/72)\] Eliminate normalize and length methods for Vec<inttype>
+* \[[#70](https://github.com/AcademySoftwareFoundation/Imath/pull/70)\] Adding missing header
+* \[[#69](https://github.com/AcademySoftwareFoundation/Imath/pull/69)\] [#bugfix] Install error on windows #68
+* \[[#67](https://github.com/AcademySoftwareFoundation/Imath/pull/67)\] Fix two typos in m22 tests causing out of bounds references
+* \[[#66](https://github.com/AcademySoftwareFoundation/Imath/pull/66)\] Use likely/unlikely to improve certain vector ops
+* \[[#65](https://github.com/AcademySoftwareFoundation/Imath/pull/65)\] Deprecate Math<T> in favor of std::
+* \[[#60](https://github.com/AcademySoftwareFoundation/Imath/pull/60)\] Make Matrix implementation more SIMD friendly
+* \[[#59](https://github.com/AcademySoftwareFoundation/Imath/pull/59)\] Imath::Vec -- omit exception-throwing methods from Cuda side
+* \[[#58](https://github.com/AcademySoftwareFoundation/Imath/pull/58)\] Make separate test calls for each test
+* \[[#57](https://github.com/AcademySoftwareFoundation/Imath/pull/57)\] Fixes the subproject test
+* \[[#56](https://github.com/AcademySoftwareFoundation/Imath/pull/56)\] Initial support for C wrappers
+* \[[#55](https://github.com/AcademySoftwareFoundation/Imath/pull/55)\] Fix non-linux platform CI
+* \[[#54](https://github.com/AcademySoftwareFoundation/Imath/pull/54)\] Combination of Half/Imath and HalfTest/ImathTest directories.
+* \[[#53](https://github.com/AcademySoftwareFoundation/Imath/pull/53)\] Stoped sonar cloud from running on PR
+* \[[#52](https://github.com/AcademySoftwareFoundation/Imath/pull/52)\] Fix problems with ImathInterval, and add test
+* \[[#51](https://github.com/AcademySoftwareFoundation/Imath/pull/51)\] First pass at sphinx/breathe/doxygen documentation
+* \[[#50](https://github.com/AcademySoftwareFoundation/Imath/pull/50)\] Removed all references to PYIMATH_VERSION, as it is redundant.
+* \[[#48](https://github.com/AcademySoftwareFoundation/Imath/pull/48)\] Set version to 3.0.0 and SOCURRENT to 26
+* \[[#47](https://github.com/AcademySoftwareFoundation/Imath/pull/47)\] Added Exc variants of all methods in frustum that required them.
+* \[[#46](https://github.com/AcademySoftwareFoundation/Imath/pull/46)\] Movement of all source directories into one top level src/ 
+* \[[#44](https://github.com/AcademySoftwareFoundation/Imath/pull/44)\] Fix copy/paste typos in Doxyfile and conf.py
+* \[[#43](https://github.com/AcademySoftwareFoundation/Imath/pull/43)\] Initial Doxygen/sphinx/breathe/readthedocs configuration
+* \[[#42](https://github.com/AcademySoftwareFoundation/Imath/pull/42)\] Made various Imath/ header methods inline
+* \[[#41](https://github.com/AcademySoftwareFoundation/Imath/pull/41)\] __host__ __device__ CUDA macro added to all header functions under Imath/
+* \[[#40](https://github.com/AcademySoftwareFoundation/Imath/pull/40)\] Update INSTALL info on namespaces and cmake options
+* \[[#39](https://github.com/AcademySoftwareFoundation/Imath/pull/39)\] Clean up of repo docs.
+* \[[#38](https://github.com/AcademySoftwareFoundation/Imath/pull/38)\] Added CUDA __host__ __device__ with macro to Vector, Matrix, Limits, \xe2\x80\xa6
+* \[[#37](https://github.com/AcademySoftwareFoundation/Imath/pull/37)\] Add .git-blame-ignore-revs to ignore reformatting
+* \[[#36](https://github.com/AcademySoftwareFoundation/Imath/pull/36)\] Disable clang-format for python bindings
+* \[[#32](https://github.com/AcademySoftwareFoundation/Imath/pull/32)\] Tune .clang-format to match existing style
+* \[[#30](https://github.com/AcademySoftwareFoundation/Imath/pull/30)\] Changed analysis sonarcloud tests, run on pull request.
+* \[[#29](https://github.com/AcademySoftwareFoundation/Imath/pull/29)\] Added CI testing and made necessary changes to pass those tests.
+* \[[#27](https://github.com/AcademySoftwareFoundation/Imath/pull/27)\] Simplest CUDA half type conflict resolution implementation.
+* \[[#25](https://github.com/AcademySoftwareFoundation/Imath/pull/25)\] Used macros to allow compilation with C++11 and constexpr
+* \[[#24](https://github.com/AcademySoftwareFoundation/Imath/pull/24)\] b"removed pragma to disable clang's -Wself-assign-overloaded"
+* \[[#23](https://github.com/AcademySoftwareFoundation/Imath/pull/23)\] changed assert()\] to throw, which is what the original Iex macro ASSERT()\] macro did
+* \[[#21](https://github.com/AcademySoftwareFoundation/Imath/pull/21)\] First pass at adding constexpr where useful
+* \[[#20](https://github.com/AcademySoftwareFoundation/Imath/pull/20)\] Speedtest and Inversion python bindings for Arrays
+* \[[#19](https://github.com/AcademySoftwareFoundation/Imath/pull/19)\] clean up Imath repo docs
+* \[[#18](https://github.com/AcademySoftwareFoundation/Imath/pull/18)\] Transfer of PyImath history and source to Imath
+* \[[#17](https://github.com/AcademySoftwareFoundation/Imath/pull/17)\] fixed typo in README.md
+* \[[#15](https://github.com/AcademySoftwareFoundation/Imath/pull/15)\] further edits of README.md
+* \[[#14](https://github.com/AcademySoftwareFoundation/Imath/pull/14)\] First complete draft of README.md for the Imath project
+
+## Inherited History from OpenEXR
+
+History dated before May 9th, 2020 has been inherited from
+https://github.com/AcademySoftwareFoundation/openexr, omitting commits
+(via [git-filter-repo](https://github.com/newren/git-filter-repo)) not
+pertaining to files now a part of the Imath project.
diff -r -Nup Box2D-2.4.1-1.oe2203.riscv64/usr/share/doc/Imath/CODE_OF_CONDUCT.md Imath-3.1.4-1.oe2203.riscv64/usr/share/doc/Imath/CODE_OF_CONDUCT.md
--- Box2D-2.4.1-1.oe2203.riscv64/usr/share/doc/Imath/CODE_OF_CONDUCT.md	1970-01-01 08:00:00.000000000 +0800
+++ Imath-3.1.4-1.oe2203.riscv64/usr/share/doc/Imath/CODE_OF_CONDUCT.md	2022-01-20 09:22:48.000000000 +0800
@@ -0,0 +1,52 @@
+# Code of Conduct
+
+Imath is a sub-project of the OpenEXR project, which abides by Linux
+Foundation's code of conduct, which you can read in full
+[here](https://lfprojects.org/policies/code-of-conduct).
+
+Our covenant includes:
+
+* Treat each other with respect, professionalism, fairness, and
+  sensitivity to our many differences and strengths, including in
+  situations of high pressure and urgency.
+
+* Never harass or bully anyone verbally, physically or sexually.
+
+* Never discriminate on the basis of personal characteristics or group
+  membership.
+
+* Communicate constructively and avoid demeaning or insulting behavior
+  or language.
+
+* Seek, accept, and offer objective work criticism, and acknowledge
+  properly the contributions of others.
+
+* Be honest about your own qualifications, and about any circumstances
+  that might lead to conflicts of interest.
+
+* Respect the privacy of others and the confidentiality of data you
+  access.
+
+* With respect to cultural differences, be conservative in what you do
+  and liberal in what you accept from others, but not to the point of
+  accepting disrespectful, unprofessional or unfair or unwelcome
+  behavior or advances.
+
+* Promote the rules of this Code and take action (especially if you
+  are in a leadership position) to bring the discussion back to a more
+  civil level whenever inappropriate behaviors are observed.
+
+* Stay on topic: Make sure that you are posting to the correct channel
+  and avoid off-topic discussions. Remember when you update an issue
+  or respond to an email you are potentially sending to a large number
+  of people.
+
+* Step down considerately: participants in every project come and go,
+  and LF Projects is no different. When you leave or disengage from
+  the project, in whole or in part, we ask that you do so in a way
+  that minimizes disruption to the project. This means you should tell
+  people you are leaving and take the proper steps to ensure that
+  others can pick up where you left off.
+
+To report incidents or to appeal reports of incidents, send email to
+the Manager of LF Projects at manager@lfprojects.org.
diff -r -Nup Box2D-2.4.1-1.oe2203.riscv64/usr/share/doc/Imath/CONTRIBUTING.md Imath-3.1.4-1.oe2203.riscv64/usr/share/doc/Imath/CONTRIBUTING.md
--- Box2D-2.4.1-1.oe2203.riscv64/usr/share/doc/Imath/CONTRIBUTING.md	1970-01-01 08:00:00.000000000 +0800
+++ Imath-3.1.4-1.oe2203.riscv64/usr/share/doc/Imath/CONTRIBUTING.md	2022-01-20 09:22:48.000000000 +0800
@@ -0,0 +1,399 @@
+# Contributing to Imath
+
+Thank you for your interest in contributing to Imath. This document
+explains our contribution process and procedures:
+
+* [Getting Information](#Getting-Information)
+* [Legal Requirements](#Legal-Requirements)
+* [Development Workflow](#Development-Workflow)
+* [Coding Style](#Coding-Style)
+* [Versioning Policy](#Versioning-Policy)
+* [Creating a Release](#Creating-a-Release)
+
+Imath is a sub-project of
+[OpenEXR](https://github.com/AcademySoftwareFoundation/openexr) and
+follows OpenEXR's governance and contribution policies.
+
+For a description of the roles and responsibilities of the various
+members of the OpeneEXR community, see [GOVERNANCE.md](https://github.com/AcademySoftwareFoundation/openexr/blob/master/GOVERNANCE.md),
+and for further details, see the OpenEXR project's [Technical
+Charter](https://github.com/AcademySoftwareFoundation/openexr/blob/master/ASWF/charter/OpenEXR-Technical-Charter.md).
+Briefly, a "contributor" is anyone who submits content to the project,
+a "committer" is someone who reviews and approves such submissions,
+and the Technical Steering Committee provides general project
+oversight.
+
+## Getting Information
+
+There are two primary ways to connect with the Imath project:
+
+* The [openexr-dev](https://lists.aswf.io/g/openexr-dev) mail list:
+  This is a development focused mail list with a deep history of
+  technical conversations and decisions that have shaped the project.
+
+* [GitHub Issues](https://github.com/AcademySoftwareFoundation/Imath/issues): GitHub
+  Issues are used both to track bugs and to discuss feature requests.
+
+### How to Ask for Help
+
+If you have trouble installing, building, or using the library, but
+there's not yet reason to suspect you've encountered a genuine bug,
+start by posting a question to the
+[openexr-dev](http://lists.aswf.io/openexr-dev) mailing list. This is
+the place for question such has "How do I...".
+
+### How to Report a Bug
+
+Imath use GitHub's issue tracking system for bugs and enhancements:
+https://github.com/AcademySoftwareFoundation/Imath/issues
+
+If you are submitting a bug report, please be sure to note which
+version of Imath you are using, on what platform (OS/version, which
+compiler you used, and any special build flags or other unusual
+environmental issues). Please give a specific account of
+
+* what you tried
+* what happened
+* what you expected to happen instead
+
+with enough detail that others can reproduce the problem.
+
+### How to Request a Change
+
+Open a GitHub issue: https://github.com/AcademySoftwareFoundation/Imath/issues.
+
+Describe the situation and the objective in as much detail as
+possible. Feature requests will almost certainly spawn a discussion
+among the project community.
+
+### How to Report a Security Vulnerability
+
+If you think you've found a potential vulnerability in Imath, please
+refer to [SECURITY.md](SECURITY.md) to responsibly disclose it.
+
+### How to Contribute a Bug Fix or Change
+
+To contribute code to the project, first read over the
+[GOVERNANCE.md](https://github.com/AcademySoftwareFoundation/openexr/blob/master/GOVERNANCE.md)
+page to understand the roles involved. You'll need:
+
+* A good knowledge of git.
+
+* A fork of the GitHub repo.
+
+* An understanding of the project's development workflow.
+
+* Legal authorization, that is, you need to have signed a contributor
+  License Agreement. See below for details.
+
+## Legal Requirements
+
+Imath is a project of the Academy Software Foundation and follows the
+open source software best practice policies of the Linux Foundation.
+
+### License
+
+Imath is licensed under the [BSD-3-Clause](LICENSE.md)
+license. Contributions to the library should abide by that standard
+license.
+
+### Contributor License Agreements
+
+Developers who wish to contribute code to be considered for inclusion
+in the Imath distribution must first complete a **Contributor License
+Agreement** for the OpenEXR project.
+
+Imath uses EasyCLA for managing CLAs, which automatically
+checks to ensure CLAs are signed by a contributor before a commit
+can be merged. 
+
+* If you are an individual writing the code on your own time and
+  you're SURE you are the sole owner of any intellectual property you
+  contribute, you can [sign the CLA as an individual contributor](https://github.com/communitybridge/easycla/blob/master/contributors/sign-a-cla-as-an-individual-contributor-to-github.md).
+
+* If you are writing the code as part of your job, or if there is any
+  possibility that your employers might think they own any
+  intellectual property you create, then you should use the [Corporate
+  Contributor Licence
+  Agreement](https://github.com/communitybridge/easycla/blob/master/contributors/contribute-to-a-github-company-project.md).
+
+The Imath CLAs are the standard forms used by Linux Foundation
+projects and [recommended by the ASWF TAC](https://github.com/AcademySoftwareFoundation/tac/blob/master/process/contributing.md#contributor-license-agreement-cla).
+
+### Commit Sign-Off
+
+Every commit must be signed off.  That is, every commit log message
+must include a “`Signed-off-by`” line (generated, for example, with
+“`git commit --signoff`”), indicating that the committer wrote the
+code and has the right to release it under the [BSD-3-Clause](LICENSE.md)
+license. See https://github.com/AcademySoftwareFoundation/tac/blob/master/process/contributing.md#contribution-sign-off for more information on this requirement.
+
+## Development Workflow
+
+### Git Basics
+
+Working with Imath requires understanding a significant amount of
+Git and GitHub based terminology. If you’re unfamiliar with these
+tools or their lingo, please look at the [GitHub
+Glossary](https://help.github.com/articles/github-glossary/) or browse
+[GitHub Help](https://help.github.com/).
+
+To contribute, you need a GitHub account. This is needed in order to
+push changes to the upstream repository, via a pull request.
+
+You will also need Git installed on your local development machine. If
+you need setup assistance, please see the official [Git
+Documentation](https://git-scm.com/doc).
+
+### Repository Structure and Commit Policy
+
+The Imath repository uses a simple branching and merging strategy.
+
+All development work is done directly on the master branch. The master
+branch represents the bleeding-edge of the project and most
+contributions should be done on top of it.
+
+After sufficient work is done on the master branch and the Imath
+leadership determines that a release is due, we will bump the relevant
+internal versioning and tag a commit with the corresponding version
+number, e.g. v2.0.1. Each minor version also has its own “Release
+Branch”, e.g. RB-1.1. This marks a branch of code dedicated to that
+``major.minor version``, which allows upstream bug fixes to be
+cherry-picked to a given version while still allowing the master
+branch to continue forward onto higher versions. This basic repository
+structure keeps maintenance low, while remaining simple to understand.
+
+To reiterate, the master branch represents the latest development
+version, so beware that it may include untested features and is not
+generally stable enough for release.  To retrieve a stable version of
+the source code, use one of the release branches.
+
+### The Git Workflow
+
+This development workflow is sometimes referred to as
+[OneFlow](https://www.endoflineblog.com/oneflow-a-git-branching-model-and-workflow). It
+leads to a simple, clean, linear edit history in the repo.
+
+The Imath GitHub repo allows rebase merging and disallows merge
+commits and squash merging. This ensures that the repo edit history
+remains linear, avoiding the "bubbles" characteristic of the
+[GitFlow](https://www.endoflineblog.com/gitflow-considered-harmful)
+workflow.
+
+### Use the Fork, Luke.
+
+In a typical workflow, you should **fork** the Imath repository to
+your account. This creates a copy of the repository under your user
+namespace and serves as the “home base” for your development branches,
+from which you will submit **pull requests** to the upstream
+repository to be merged.
+
+Once your Git environment is operational, the next step is to locally
+**clone** your forked Imath repository, and add a **remote**
+pointing to the upstream Imath repository. These topics are
+covered in the GitHub documentation [Cloning a
+repository](https://help.github.com/articles/cloning-a-repository/)
+and [Configuring a remote for a
+fork](https://help.github.com/articles/configuring-a-remote-for-a-fork/),
+but again, if you need assistance feel free to reach out on the
+openexr-dev@lists.aswf.io mail list.
+
+### Pull Requests
+
+Contributions should be submitted as Github pull requests. See
+[Creating a pull request](https://help.github.com/articles/creating-a-pull-request/)
+if you're unfamiliar with this concept. 
+
+The development cycle for a code change should follow this protocol:
+
+1. Create a topic branch in your local repository, following the naming format
+"feature/<your-feature>" or "bugfix/<your-fix>".
+
+2. Make changes, compile, and test thoroughly. Code style should match existing
+style and conventions, and changes should be focused on the topic the pull
+request will be addressing. Make unrelated changes in a separate topic branch
+with a separate pull request.
+
+3. Push commits to your fork.
+
+4. Create a Github pull request from your topic branch.
+
+5. Pull requests will be reviewed by project committers and contributors,
+who may discuss, offer constructive feedback, request changes, or approve
+the work.
+
+6. Upon receiving the required number of committer approvals (as
+outlined in [Required Approvals](#required-approvals)), a committer
+other than the PR contributor may merge changes into the master
+branch.
+
+### Code Review and Required Approvals
+
+Modifications of the contents of the Imath repository are made on a
+collaborative basis. Anyone with a GitHub account may propose a
+modification via pull request and it will be considered by the project
+committers.
+
+Pull requests must meet a minimum number of committer approvals prior
+to being merged. Rather than having a hard rule for all PRs, the
+requirement is based on the complexity and risk of the proposed
+changes, factoring in the length of time the PR has been open to
+discussion. The following guidelines outline the project's established
+approval rules for merging:
+
+* Core design decisions, large new features, or anything that might be
+perceived as changing the overall direction of the project should be
+discussed at length in the mail list before any PR is submitted, in
+order to: solicit feedback, try to get as much consensus as possible,
+and alert all the stakeholders to be on the lookout for the eventual
+PR when it appears.
+
+* Small changes (bug fixes, docs, tests, cleanups) can be approved and
+merged by a single committer.
+
+* Big changes that can alter behavior, add major features, or present
+a high degree of risk should be signed off by TWO committers, ideally
+one of whom should be the "owner" for that section of the codebase (if
+a specific owner has been designated). If the person submitting the PR
+is him/herself the "owner" of that section of the codebase, then only
+one additional committer approval is sufficient. But in either case, a
+48 hour minimum is helpful to give everybody a chance to see it,
+unless it's a critical emergency fix (which would probably put it in
+the previous "small fix" category, rather than a "big feature").
+
+* Escape valve: big changes can nonetheless be merged by a single
+committer if the PR has been open for over two weeks without any
+unaddressed objections from other committers. At some point, we have
+to assume that the people who know and care are monitoring the PRs and
+that an extended period without objections is really assent.
+
+Approval must be from committers who are not authors of the change. If
+one or more committers oppose a proposed change, then the change
+cannot be accepted unless:
+
+* Discussions and/or additional changes result in no committers
+objecting to the change. Previously-objecting committers do not
+necessarily have to sign-off on the change, but they should not be
+opposed to it.
+
+* The change is escalated to the TSC and the TSC votes to approve the
+change.  This should only happen if disagreements between committers
+cannot be resolved through discussion.
+
+Committers may opt to elevate significant or controversial
+modifications to the TSC by assigning the `tsc-review` label to a pull
+request or issue. The TSC should serve as the final arbiter where
+required.
+
+### Test Policy
+
+All functionality in the library must be covered by an automated
+test. Each library has a companion ``Test`` project,
+i.e. ``ImathTest`` and ``HalfTest``.  This test suite is collectively
+expected to validate the behavior of very part of the library.
+
+* Any new functionality should be accompanied by a test that validates
+  its behavior.
+
+* Any change to existing functionality should have tests added if they
+  don't already exist.
+
+The test should should be run, via ``make test``, before submitting a
+pull request.
+
+## Coding Style
+
+#### Formatting
+
+Code formattting is controlled by ``clang-format``, with the style
+specified via the project
+[.clang-format](https://github.com/AcademySoftwareFoundation/Imath/blob/master/.clang-format)
+file.
+
+* Indent with spaces, never tabs. Each indent level should be 4 spaces.
+
+* Function return types go on a separate line:
+
+        template <class T>
+        constexpr inline T
+        abs (T a)
+        {
+            return (a > T (0)) ? a : -a;
+        }
+
+* Use a space between function names and the following parentheses unless there are no arguments:
+        V3f v (0.0);
+        v.normalize();
+
+* Place curly braces on their own lines:
+
+#### Naming Conventions
+
+* In general, classes and template type names should start with upper
+  case and capitalize new words: `class CustomerList;`
+
+* In general, local variables should use camelCase. Macros and
+  constants should use `ALL_CAPS`.
+
+* Member fields in a class should start with an underscore. No other
+  variables should begin with underscore.
+
+#### File conventions
+
+C++ implementation should be named `*.cpp`. Headers should be named `.h`.
+
+All headers should contain:
+
+    #pragma once
+
+#### Type Conventions
+
+Because Imath must deal properly with large images, whose width
+and/or height approach the maximum allowable in 32-bit signed
+integers, take special care that integer arithmatic doesn't overlow,
+and make it as clear as possible exactly what the code is doing,
+especially in the edge cases.
+
+To clarify the intention, prefer to cast between types using
+``static_cast<>()`` rather than the basic C-style ``()`` notation:
+
+    // good:
+    size_t x = static_cast <size_t> (y);
+
+    // bad:
+    x = (size_t) y;
+    x = size_t (y);
+
+Prefer to use ``std::numeric_limits<>`` instead of preprocesser
+define's such as ``INT_MAX``:
+
+    // good:
+    if (x > std::numeric_limits<int>::max())
+        std::cout << "That's too freakin' high.\n";
+
+    // bad:
+    if (x > INT_MAX)
+
+#### Copyright Notices
+
+All new source files should begin with a copyright and license referencing the OpenEXR project:
+
+    // Copyright (c) Contributors to the OpenEXR Project. All rights reserved.
+    // SPDX-License-Identifier: BSD-3-Clause
+
+#### Comments and Doxygen
+
+Use C++ comments (starting line with `//`) rather than C comments (`/*
+... */`).
+
+For public APIs, use Doxygen-style comments (start with `///`), such as:
+
+    /// Explanation of a class.  Note THREE slashes!
+    /// Also, you need at least two lines like this.  If you don't have enough
+    /// for two lines, make one line blank like this:
+    ///
+    class myclass {
+        ....
+        float foo;  ///< Doxygen comments on same line look like this
+    }
+
diff -r -Nup Box2D-2.4.1-1.oe2203.riscv64/usr/share/doc/Imath/CONTRIBUTORS.md Imath-3.1.4-1.oe2203.riscv64/usr/share/doc/Imath/CONTRIBUTORS.md
--- Box2D-2.4.1-1.oe2203.riscv64/usr/share/doc/Imath/CONTRIBUTORS.md	1970-01-01 08:00:00.000000000 +0800
+++ Imath-3.1.4-1.oe2203.riscv64/usr/share/doc/Imath/CONTRIBUTORS.md	2022-01-20 09:22:48.000000000 +0800
@@ -0,0 +1,35 @@
+This is a list of contributors to the OpenEXR project, sorted
+alphabetically by first name.
+
+If you know of missing, please email: info@openexr.com.
+
+* Andrew Kunz 
+* Antonio Rojas 
+* Cary Phillips 
+* Christina Tempelaar-Lietz 
+* Daniel Kaneider 
+* Ed Hanway 
+* Eric Wimmer 
+* Florian Kainz 
+* Gregorio Litenstein 
+* Harry Mallon 
+* Huibean Luo 
+* Jens Lindgren 
+* Ji Hun Yu 
+* Jonathan Stone 
+* Kimball Thurston 
+* Larry Gritz 
+* Liam Fernandez 
+* Mark Sisson 
+* Nicholas Yue 
+* Nick Porcino 
+* Nick Rasmussen 
+* Nicolas Chauvet 
+* Owen Thompson 
+* Peter Hillman 
+* Piotr Stanczyk 
+* Ralph Potter 
+* Simon Boorer 
+* Thanh Ha 
+* Thorsten Kaufmann 
+* Yujie Shu 
diff -r -Nup Box2D-2.4.1-1.oe2203.riscv64/usr/share/doc/Imath/README.md Imath-3.1.4-1.oe2203.riscv64/usr/share/doc/Imath/README.md
--- Box2D-2.4.1-1.oe2203.riscv64/usr/share/doc/Imath/README.md	1970-01-01 08:00:00.000000000 +0800
+++ Imath-3.1.4-1.oe2203.riscv64/usr/share/doc/Imath/README.md	2022-01-20 09:22:48.000000000 +0800
@@ -0,0 +1,136 @@
+[![License](https://img.shields.io/github/license/AcademySoftwareFoundation/Imath)](LICENSE.md)
+[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/2799/badge)](https://bestpractices.coreinfrastructure.org/projects/2799)
+[![Build Status](https://dev.azure.com/academysoftwarefoundation/Academy%20Software%20Foundation/_apis/build/status/academysoftwarefoundation.Imath)](https://dev.azure.com/academysoftwarefoundation/Academy%20Software%20Foundation/_build?definitionId=4&_a=summary)
+[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=AcademySoftwareFoundation_Imath&metric=alert_status)](https://sonarcloud.io/dashboard?id=AcademySoftwareFoundation_Imath)
+
+# Imath
+
+Imath is a basic, light-weight, and efficient C++ representation of 2D
+and 3D vectors and matrices and other simple but useful mathematical
+objects, functions, and data types common in computer graphics
+applications, including the “half” 16-bit floating-point type.
+
+Imath also includes optional python bindings for all types and
+functions, including optimized implementations of vector and matrix
+arrays. 
+
+### Project Mission
+
+The goals of the Imath project are simplicity, ease of use,
+correctness and verifiability, performance, and breadth of
+adoption. Imath is not intended to be a comprehensive linear algebra
+or numerical analysis package.
+
+### Features
+
+* half: 16-bit floating-point type
+* Vector: V2s, V2i, V2i64, V2f, V2d, V3s, V3i, V4i64, V3f, V3d, V4s, V4i, V4i64, V4f, V4d 
+* Matrix: M22f, M22d, M33f, M33d, M44f, M44d 
+* Bounding box: Box2s, Box2i, Box2i64, Box2f, Box2d, Box3s, Box3i, Box3i64, Box3f, Box3d
+* Color: C3h, C3f, C3c, C4f, C4h, C4c 
+* Euler angles: Eulerf, Eulerd
+* Quaternion: Quatf, Quatd
+* Viewing frustum: Frustrumf, Frustumd
+* Interval: Intervals, Intervali, Intervalf, Intervald
+* Line: Line3f, Line3d
+* Plane: Plane3f, Plane3d
+* Sphere: Sphere3f, Sphere3d
+* Shear: Shear3f, Shear3d, Shear6f, Shear6
+* Miscellaneous math functions
+  
+### New Features in 3.1
+
+The 3.1 release of Imath introduces optimized half-to-float and
+float-to-half conversion using the F16C SSE instruction set extension,
+if available. These single-instruction conversions offer a 5-10x
+speedup for float-to-half and 2x speedup for half-to-float over
+Imath/half's traditional table-based conversion (timings depend on the
+data).
+
+In the absence of the F16C instruction set, the lookup-table-based
+conversion from half to float is still the default, but Imath 3.1 also
+introduces an optimized bit-shift conversion algorithm as a
+compile-time option that does not require lookup tables, for
+architectures where memory is limited. The float-to-half conversion
+also no longer requires an exponent lookup table, further reducing
+memory requirements.
+
+These new conversions generate the same values as the tranditional
+methods, which ensures backwards compatibility.  See
+[INSTALL.md](INSTALL.md#imath-configuration-settings) for more
+installation and configuation options.
+
+Also, ``half.h`` can now be included in pure C code for a definition
+of the type and for conversions between half and float.
+
+### Supported Platforms
+
+Imath builds on Linux, macOS, Microsoft Windows, and is
+cross-compilable on other systems.
+
+### About Imath
+
+Imath was originally developed at Industrial Light & Magic in the
+early 2000's and was originally distributed as open source as a part
+of the [OpenEXR](https://github.com/AcademySoftwareFoundation/openexr)
+project.
+
+Imath continues to be maintained as a sub-project of OpenEXR, which is
+now a project of the [Academy Software
+Foundation](https://www.aswf.io).  See
+the OpenEXR project's [GOVERNANCE.md](https://github.com/AcademySoftwareFoundation/openexr/blob/master/GOVERNANCE.md)
+for more information about how the project operates.
+
+The OpenEXR project is dedicated to promoting a harassment-free
+community. Read our [code of conduct](CODE_OF_CONDUCT.md).
+
+### Developer Quick Start
+
+Technical documentation for the Imath classes and functions can be found at
+[imath.readthedocs.io](https://imath.readthedocs.io).
+
+See [INSTALL.md](INSTALL.md) for instructions on downloading and building Imath
+from source.
+
+If you encounter problems compiling code or building projects written
+with an earlier release of Imath, the [porting
+guide](https://github.com/AcademySoftwareFoundation/Imath/blob/master/docs/PortingGuide2-3.md)
+explains some of the differences and how to address them.
+
+### A Note about Versioning
+
+Because Imath was originally distributed as a part of OpenEXR, it has
+already had two major release versions, as a part of OpenEXR v1.* and
+v2.*. To avoid confusion with these original releases, the first
+version of Imath released independently of OpenEXR is Version v3.0. To
+be clear, the versioning and release of Imath is no longer tied to
+OpenEXR.
+
+### Getting Help
+
+Connect with the project through:
+
+* The openexr-dev@lists.aswf.io mail list: This is a development
+  focused mail list with a deep history of technical conversations and
+  decisions that have shaped the project. Subscribe at
+  [openexr-dev@lists.aswf.io](https://lists.aswf.io/g/openexr-dev).
+
+* Slack: [#openexr](https://academysoftwarefdn.slack.com/archives/CMLRW4N73)
+  
+* GitHub Issues: GitHub issues are used both to track bugs and to
+  discuss feature requests. Submit an issue here:
+  https://github.com/AcademySoftwareFoundation/imath/issues. 
+
+### Getting Involved
+
+The OpenEXR developer community welcomes contributions to the
+project. See [CONTRIBUTING.md](CONTRIBUTING.md) for more information
+about contributing to Imath and OpenEXR.
+
+## License
+
+Imath is released under OpenEXR's [BSD-3-Clause](LICENSE.md) license.
+
+---
+
+![aswf](https://github.com/AcademySoftwareFoundation/openexr/blob/master/ASWF/images/aswf.png)
diff -r -Nup Box2D-2.4.1-1.oe2203.riscv64/usr/share/doc/Imath/SECURITY.md Imath-3.1.4-1.oe2203.riscv64/usr/share/doc/Imath/SECURITY.md
--- Box2D-2.4.1-1.oe2203.riscv64/usr/share/doc/Imath/SECURITY.md	1970-01-01 08:00:00.000000000 +0800
+++ Imath-3.1.4-1.oe2203.riscv64/usr/share/doc/Imath/SECURITY.md	2022-01-20 09:22:48.000000000 +0800
@@ -0,0 +1,15 @@
+# Security Policy
+
+## Reporting a Vulnerability
+
+If you think you've found a potential vulnerability in Imath, please
+report it by emailing security@openexr.org. Only OpenEXR Technical
+Steering Committee members and Academy Software Foundation project
+management have access to these messages. Include detailed steps to
+reproduce the issue, and any other information that could aid an
+investigation. Our policy is to respond to vulernability reports
+within 14 days.
+
+Our policy is to address critical security vulnerabilities rapidly and
+post patches as quickly as possible.
+
diff -r -Nup Box2D-2.4.1-1.oe2203.riscv64/usr/share/licenses/Box2D/LICENSE Imath-3.1.4-1.oe2203.riscv64/usr/share/licenses/Box2D/LICENSE
--- Box2D-2.4.1-1.oe2203.riscv64/usr/share/licenses/Box2D/LICENSE	2020-10-18 08:09:34.000000000 +0800
+++ Imath-3.1.4-1.oe2203.riscv64/usr/share/licenses/Box2D/LICENSE	1970-01-01 08:00:00.000000000 +0800
@@ -1,21 +0,0 @@
-MIT License
-
-Copyright (c) 2019 Erin Catto
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
\ No newline at end of file
diff -r -Nup Box2D-2.4.1-1.oe2203.riscv64/usr/share/licenses/Imath/LICENSE.md Imath-3.1.4-1.oe2203.riscv64/usr/share/licenses/Imath/LICENSE.md
--- Box2D-2.4.1-1.oe2203.riscv64/usr/share/licenses/Imath/LICENSE.md	1970-01-01 08:00:00.000000000 +0800
+++ Imath-3.1.4-1.oe2203.riscv64/usr/share/licenses/Imath/LICENSE.md	2022-01-20 09:22:48.000000000 +0800
@@ -0,0 +1,11 @@
+Copyright Contributors to the OpenEXR Project. All rights reserved.
+
+Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
+
+1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
+
+2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
+
+3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
+
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ CHECK_RESULT 0 0 0 'Failed option: -c'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Failed option: -c'
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ rpmdev-diff -l Box2D-2.4.1-1.oe2203.riscv64.rpm Imath-3.1.4-1.oe2203.riscv64.rpm
--- Box2D-2.4.1-1.oe2203.riscv64.files	2022-12-16 00:29:46.373143264 +0800
+++ Imath-3.1.4-1.oe2203.riscv64.files	2022-12-16 00:29:46.465147337 +0800
@@ -3,2 +3,2 @@
-usr/lib64/libbox2d.so.2
-usr/lib64/libbox2d.so.2.4.1
+usr/lib64/libImath-3_1.so.29
+usr/lib64/libImath-3_1.so.29.3.0
@@ -5,0 +6,8 @@
+usr/share/doc
+usr/share/doc/Imath
+usr/share/doc/Imath/CHANGES.md
+usr/share/doc/Imath/CODE_OF_CONDUCT.md
+usr/share/doc/Imath/CONTRIBUTING.md
+usr/share/doc/Imath/CONTRIBUTORS.md
+usr/share/doc/Imath/README.md
+usr/share/doc/Imath/SECURITY.md
@@ -7,2 +15,2 @@
-usr/share/licenses/Box2D
-usr/share/licenses/Box2D/LICENSE
+usr/share/licenses/Imath
+usr/share/licenses/Imath/LICENSE.md
+ CHECK_RESULT 0 0 0 'Failed option: -l'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Failed option: -l'
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ rpmdev-diff -L Box2D-2.4.1-1.oe2203.riscv64.rpm Imath-3.1.4-1.oe2203.riscv64.rpm
--- Box2D-2.4.1-1.oe2203.riscv64.files	2022-12-16 00:29:50.389315555 +0800
+++ Imath-3.1.4-1.oe2203.riscv64.files	2022-12-16 00:29:50.529321352 +0800
@@ -2,3 +2,9 @@
--rw-r--r-- root     root         1066 Oct 18  2020 usr/share/licenses/Box2D/LICENSE
--rwxr-xr-x root     root       224592 Sep  2 18:07 usr/lib64/libbox2d.so.2.4.1
-drwxr-xr-x root     root           60 Dec 16 00:29 usr/share
+-rw-r--r-- root     root          576 Jan 20  2022 usr/share/doc/Imath/SECURITY.md
+-rw-r--r-- root     root          661 Jan 20  2022 usr/share/doc/Imath/CONTRIBUTORS.md
+-rw-r--r-- root     root         1497 Jan 20  2022 usr/share/licenses/Imath/LICENSE.md
+-rw-r--r-- root     root         2108 Jan 20  2022 usr/share/doc/Imath/CODE_OF_CONDUCT.md
+-rw-r--r-- root     root         5780 Jan 20  2022 usr/share/doc/Imath/README.md
+-rw-r--r-- root     root        15700 Jan 20  2022 usr/share/doc/Imath/CONTRIBUTING.md
+-rw-r--r-- root     root        21091 Jan 20  2022 usr/share/doc/Imath/CHANGES.md
+-rwxr-xr-x root     root       309152 Dec  1 06:50 usr/lib64/libImath-3_1.so.29.3.0
+drwxr-xr-x root     root           60 Dec 16 00:29 usr/share/doc
@@ -6 +12 @@
-drwxr-xr-x root     root           60 Dec 16 00:29 usr/share/licenses/Box2D
+drwxr-xr-x root     root           60 Dec 16 00:29 usr/share/licenses/Imath
@@ -9 +15,3 @@
-lrwxrwxrwx root     root           17 Dec 16 00:29 usr/lib64/libbox2d.so.2 -> libbox2d.so.2.4.1
+drwxr-xr-x root     root           80 Dec 16 00:29 usr/share
+drwxr-xr-x root     root          160 Dec 16 00:29 usr/share/doc/Imath
+lrwxrwxrwx root     root           22 Dec 16 00:29 usr/lib64/libImath-3_1.so.29 -> libImath-3_1.so.29.3.0
+ CHECK_RESULT 0 0 0 'Failed option: -L'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Failed option: -L'
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ rpmdev-diff -m Box2D-2.4.1-1.oe2203.riscv64.rpm Imath-3.1.4-1.oe2203.riscv64.rpm
--- old.meta	2022-12-16 00:29:52.837415169 +0800
+++ new.meta	2022-12-16 00:29:53.089425222 +0800
@@ -1,2 +1,2 @@
-Name        : Box2D
-Version     : 2.4.1
+Name        : Imath
+Version     : 3.1.4
@@ -7,6 +7,6 @@
-Size        : 225675
-License     : zlib
-Signature   : RSA/SHA1, Fri Sep  2 18:07:52 2022, Key ID e8824b862466a8cc
-Source RPM  : Box2D-2.4.1-1.oe2203.src.rpm
-Build Date  : Fri Sep  2 18:06:54 2022
-Build Host  : oerv-obs-worker-09
+Size        : 356587
+License     : BSD
+Signature   : RSA/SHA1, Thu Dec  1 06:59:40 2022, Key ID e8824b862466a8cc
+Source RPM  : Imath-3.1.4-1.oe2203.src.rpm
+Build Date  : Thu Dec  1 04:34:41 2022
+Build Host  : oerv-obs-worker-11
@@ -15,2 +15,2 @@
-URL         : http://box2d.org/
-Summary     : A 2D Physics Engine for Games
+URL         : https://github.com/AcademySoftwareFoundation/Imath
+Summary     : Library of 2D and 3D vector, matrix, and math operations for computer graphics
@@ -18,6 +18,6 @@
-Box2D is an open source C++ engine for simulating rigid bodies in 2D.
-Box2D is developed by Erin Catto and has the zlib license.
-While the zlib license does not require acknowledgement,
-we encourage you to give credit to Box2D in your product.
-* Wed Aug 31 2022 wangjunqiang <wangjunqiang@iscas.ac.cn> - 2.4.1-1
-- Init Repo
+Imath is a basic, light-weight, and efficient C++ representation of 2D and 3D
+vectors and matrices and other simple but useful mathematical objects,
+functions, and data types common in computer graphics applications, including
+the “half” 16-bit floating-point type.
+* Mon Feb 07 2022 liyanan <liyanan32@huawei.com> - 3.1.4-1
+- package init
@@ -30 +29,0 @@
-Requires: libgcc_s.so.1(GCC_3.0)(64bit)  
@@ -34 +32,0 @@
-Requires: libstdc++.so.6(CXXABI_1.3)(64bit)  
@@ -35,0 +34 @@
+Requires: libstdc++.so.6(GLIBCXX_3.4.9)(64bit)  
@@ -41,3 +40,3 @@
-Provides: Box2D = 2.4.1-1.oe2203
-Provides: Box2D(riscv-64) = 2.4.1-1.oe2203
-Provides: libbox2d.so.2()(64bit)  
+Provides: Imath = 3.1.4-1.oe2203
+Provides: Imath(riscv-64) = 3.1.4-1.oe2203
+Provides: libImath-3_1.so.29()(64bit)  
+ CHECK_RESULT 0 0 0 'Failed option: -m'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Failed option: -m'
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ rpmdev-diff -c -y Box2D-2.4.1-1.oe2203.riscv64.rpm Imath-3.1.4-1.oe2203.riscv64.rpm
Only in Imath-3.1.4-1.oe2203.riscv64/usr/lib64: libImath-3_1.so.29
Only in Imath-3.1.4-1.oe2203.riscv64/usr/lib64: libImath-3_1.so.29.3.0
Only in Box2D-2.4.1-1.oe2203.riscv64/usr/lib64: libbox2d.so.2
Only in Box2D-2.4.1-1.oe2203.riscv64/usr/lib64: libbox2d.so.2.4.1
Only in Imath-3.1.4-1.oe2203.riscv64/usr/share: doc
Only in Box2D-2.4.1-1.oe2203.riscv64/usr/share/licenses: Box2D
Only in Imath-3.1.4-1.oe2203.riscv64/usr/share/licenses: Imath
+ CHECK_RESULT 0 0 0 'Failed option: -y'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Failed option: -y'
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ rpmdev-extract -q Box2D-2.4.1-1.oe2203.riscv64.rpm
+ test -d Box2D-2.4.1-1.oe2203.riscv64
+ CHECK_RESULT 0 0 0 'Failed option: -q'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Failed option: -q'
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ rpmdev-extract -f Box2D-2.4.1-1.oe2203.riscv64.rpm
+ grep Box2D
Box2D-2.4.1-1.oe2203.riscv64/usr/lib64/libbox2d.so.2
Box2D-2.4.1-1.oe2203.riscv64/usr/lib64/libbox2d.so.2.4.1
Box2D-2.4.1-1.oe2203.riscv64/usr/share/licenses/Box2D
Box2D-2.4.1-1.oe2203.riscv64/usr/share/licenses/Box2D/LICENSE
+ CHECK_RESULT 0 0 0 'Failed option: -f'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Failed option: -f'
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ rpmdev-extract -C ./tmp_dir Box2D-2.4.1-1.oe2203.riscv64.rpm
Box2D-2.4.1-1.oe2203.riscv64/usr/lib64/libbox2d.so.2
Box2D-2.4.1-1.oe2203.riscv64/usr/lib64/libbox2d.so.2.4.1
Box2D-2.4.1-1.oe2203.riscv64/usr/share/licenses/Box2D
Box2D-2.4.1-1.oe2203.riscv64/usr/share/licenses/Box2D/LICENSE
+ test -d ./tmp_dir/Box2D-2.4.1-1.oe2203.riscv64
+ CHECK_RESULT 0 0 0 'Failed option: -C'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Failed option: -C'
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ rpmdev-extract -h
+ grep -A 10 rpmdev-extract
+ grep Options:
Options:
+ CHECK_RESULT 0 0 0 'Failed option: -h'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Failed option: -h'
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ rpmdev-extract -v
+ grep 'rpmdev-extract version'
rpmdev-extract version 1.12
+ CHECK_RESULT 0 0 0 'Failed option: -v'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Failed option: -v'
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ rpmdev-md5 Box2D-2.4.1-1.oe2203.riscv64.rpm
+ head -n 1
+ grep 'Box2D.*rpm'
+ awk '{print $2}'
Box2D-2.4.1-1.oe2203.riscv64.rpm
+ CHECK_RESULT 0 0 0 'Failed command: rpmdev-md5'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Failed command: rpmdev-md5'
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ LOG_INFO 'End to run test.'
+ message='End to run test.'
+ python3 /root/GitRepo/mugen-riscv/libs/locallibs/mugen_log.py --level info --message 'End to run test.'
Fri Dec 16 00:30:04 2022 - INFO  - End to run test.
+ CASE_RESULT 0
+ case_re=0
+ test -z 1
+ test 1 -gt 0
+ LOG_ERROR 'failed to execute the case.'
+ message='failed to execute the case.'
+ python3 /root/GitRepo/mugen-riscv/libs/locallibs/mugen_log.py --level error --message 'failed to execute the case.'
Fri Dec 16 00:30:05 2022 - ERROR - failed to execute the case.
+ exit 1
+ post_test
+ LOG_INFO 'Start to restore the test environment.'
+ message='Start to restore the test environment.'
+ python3 /root/GitRepo/mugen-riscv/libs/locallibs/mugen_log.py --level info --message 'Start to restore the test environment.'
Fri Dec 16 00:30:06 2022 - INFO  - Start to restore the test environment.
+ DNF_REMOVE
+ node=1
+ pkg_list=
+ mode=0
+ [[ -z /tmp/tmppmsjmxni ]]
+ '[' 0 -ne 0 ']'
+ '[' 1 == 0 ']'
+ python3 /root/GitRepo/mugen-riscv/libs/locallibs/rpm_manage.py remove --node 1 --pkgs '' --tempfile /tmp/tmppmsjmxni
+ '[' 0 -ne 0 ']'
+ rm -rf /ALT ./tmp_dir Box2D-2.4.1-1.oe2203.riscv64 Box2D-2.4.1-1.oe2203.riscv64.rpm Imath-3.1.4-1.oe2203.riscv64.rpm
+ LOG_INFO 'End to restore the test environment.'
+ message='End to restore the test environment.'
+ python3 /root/GitRepo/mugen-riscv/libs/locallibs/mugen_log.py --level info --message 'End to restore the test environment.'
Fri Dec 16 00:30:27 2022 - INFO  - End to restore the test environment.
