Thu Dec 15 04:17:53 2022 - INFO  - Start to prepare the test environment!
Thu Dec 15 04:21:36 2022 - INFO  - End to prepare the test environment!
Thu Dec 15 04:21:38 2022 - INFO  - Start executing testcase!
     Created binary (application) `hello_world` package
   Compiling hello_world v0.1.0 (/root/GitRepo/mugen-riscv/testcases/cli-test/rust/oe_test_cargo_02/hello_world)
    Finished dev [unoptimized + debuginfo] target(s) in 13.98s
Hello, world!
    Finished dev [unoptimized + debuginfo] target(s) in 0.49s
     Running `target/debug/hello_world`
Hello, world!
   Compiling hello_world v0.1.0 (/root/GitRepo/mugen-riscv/testcases/cli-test/rust/oe_test_cargo_02/hello_world)
    Finished test [unoptimized + debuginfo] target(s) in 8.13s
     Running unittests (target/debug/deps/hello_world-7b304d48eede1a76)
running 0 tests
test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s
   Compiling hello_world v0.1.0 (/root/GitRepo/mugen-riscv/testcases/cli-test/rust/oe_test_cargo_02/hello_world)
    Finished bench [optimized] target(s) in 8.45s
     Running unittests (target/release/deps/hello_world-6bdd788807046047)
running 0 tests
test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s
    Checking hello_world v0.1.0 (/root/GitRepo/mugen-riscv/testcases/cli-test/rust/oe_test_cargo_02/hello_world)
    Finished dev [unoptimized + debuginfo] target(s) in 3.29s
 Documenting hello_world v0.1.0 (/root/GitRepo/mugen-riscv/testcases/cli-test/rust/oe_test_cargo_02/hello_world)
    Finished dev [unoptimized + debuginfo] target(s) in 22.97s
     Created binary (application) package
    Updating crates.io index
a = "0.0.1"
a- = "0.0.0"                                                           # ðŸ¦€ all ðŸ¦€ my ðŸ¦€ peeps ðŸ¦€ is ðŸ¦€ crabs ðŸ¦€
a-- = "0.0.0"                                                          # ðŸ•º Never thought ðŸ•º I'd see ðŸ•º the day ðŸ•º
a0 = "0.0.0"                                                           # Looking for the most fundamental crates in the Rust ecosystem? Try sorting by "â€¦
a00 = "0.0.0"                                                          #  
a0ef66a288398614a75f5e13a23843110a493844d93aa0dbf2456e58c = "1.0.2"    # stuff
a0kzg = "0.1.1"                                                        # ZKG polinomial commitments playground
a1 = "0.1.1"                                                           # This is a test crate. Thanks for coming my homepage.
a10 = "0.0.0"                                                          # Reserving the name.
a11ywatch_cli = "0.8.20"                                               # A11yWatch accessibility CLI.
... and 99401 crates more (use --limit N to see more)
serde = "1.0.150"                       # A generic serialization/deserialization framework
serde_json_experimental = "0.0.0"       # A JSON serialization file format
alt_serde_json = "1.0.61"               # A JSON serialization file format
serde_json = "1.0.89"                   # A JSON serialization file format
serde_partiql = "1.1.65"                # A PartiQL data model serialization file format
serde-encrypt = "0.7.0"                 # Encrypts all the Serialize
serde-encrypt-core = "0.7.0"            # Encrypts all the Serialize
typescript-definitions = "0.1.10"       # serde support for exporting Typescript definitions
Thu Dec 15 04:43:11 2022 - INFO  - End to run test.
Thu Dec 15 04:43:12 2022 - INFO  - succeed to execute the case.
Thu Dec 15 04:43:13 2022 - INFO  - start environment cleanup.
Thu Dec 15 04:43:35 2022 - INFO  - Finish environment cleanup!
